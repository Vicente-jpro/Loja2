/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compra_historico;

import fornecedor.Fornecedordb;
import java.awt.Color;
import java.awt.Cursor;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import jdk.jfr.Timestamp;

/**
 * @author vicente
 */
public class CompraHistoricoForm extends javax.swing.JFrame {

    private CompraHistorico compra;
    private CompraHistoricodb compraHistoricodb;

    private Fornecedordb fornecedordb;
    private CompraHistoricodb CompraHistoricoForm;
    

    /**
     * Creates new form CompraHistoricoForm
     */
    public CompraHistoricoForm() {
        super("Cadastro de CompraHistoricos");
        initComponents();

        this.setLocationRelativeTo(null);
        getRootPane().setDefaultButton(imprimirJB);

        this.setLocationRelativeTo(null);

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();
        produtotb.setRowSorter(new TableRowSorter(modelo));

        dataInicialView();
        dataFinalView();
        historicoTableView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        imprimirJB = new javax.swing.JButton();
        eliminarJB = new javax.swing.JButton();
        dataFinalJC = new javax.swing.JComboBox<>();
        dataInicialJC = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        filtrarCompraProdutoJT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        produtotb = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("DejaVu Serif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Histórico de Compra");

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        imprimirJB.setBackground(new java.awt.Color(102, 255, 204));
        imprimirJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        imprimirJB.setForeground(java.awt.Color.black);
        imprimirJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf-32.png"))); // NOI18N
        imprimirJB.setText("imprimir");
        imprimirJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirJBActionPerformed(evt);
            }
        });

        eliminarJB.setBackground(new java.awt.Color(255, 51, 51));
        eliminarJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        eliminarJB.setForeground(java.awt.Color.black);
        eliminarJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete-black-32.png"))); // NOI18N
        eliminarJB.setText("Eliminar");
        eliminarJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarJBActionPerformed(evt);
            }
        });

        dataFinalJC.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dataFinalJC.setForeground(java.awt.Color.black);
        dataFinalJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Data Final" }));

        dataInicialJC.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dataInicialJC.setForeground(java.awt.Color.black);
        dataInicialJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Data Inicial" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(imprimirJB, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarJB, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(dataInicialJC, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataFinalJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataFinalJC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataInicialJC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eliminarJB)
                    .addComponent(imprimirJB))
                .addContainerGap())
        );

        filtrarCompraProdutoJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        filtrarCompraProdutoJT.setText("Filtrar Nome do Produto / Fornecedor");
        filtrarCompraProdutoJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtrarCompraProdutoJTMouseClicked(evt);
            }
        });
        filtrarCompraProdutoJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarCompraProdutoJTActionPerformed(evt);
            }
        });
        filtrarCompraProdutoJT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filtrarCompraProdutoJTKeyTyped(evt);
            }
        });

        jButton1.setText("Imprimir");

        produtotb.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        produtotb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Compra", "Nome do Cliente", "Nome do Produto", "Quantidade", "Peço Unitário", "Preço Subtotal", "Valor Total", "V. Pagar Cliente", "Funcionário", "Lucro", "Data da Compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(produtotb);
        if (produtotb.getColumnModel().getColumnCount() > 0) {
            produtotb.getColumnModel().getColumn(0).setResizable(false);
            produtotb.getColumnModel().getColumn(1).setResizable(false);
            produtotb.getColumnModel().getColumn(2).setResizable(false);
            produtotb.getColumnModel().getColumn(3).setResizable(false);
            produtotb.getColumnModel().getColumn(4).setResizable(false);
            produtotb.getColumnModel().getColumn(5).setResizable(false);
            produtotb.getColumnModel().getColumn(6).setResizable(false);
            produtotb.getColumnModel().getColumn(7).setResizable(false);
            produtotb.getColumnModel().getColumn(8).setResizable(false);
            produtotb.getColumnModel().getColumn(9).setResizable(false);
            produtotb.getColumnModel().getColumn(10).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(filtrarCompraProdutoJT)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1346, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                .addGap(760, 760, 760))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(537, 537, 537)
                        .addComponent(jLabel1))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtrarCompraProdutoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1352, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtrarCompraProdutoJTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtrarCompraProdutoJTKeyTyped

        filtrar();

        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarCompraProdutoJTKeyTyped

    private void filtrarCompraProdutoJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarCompraProdutoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarCompraProdutoJTActionPerformed

    private void filtrarCompraProdutoJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtrarCompraProdutoJTMouseClicked

        filtrarCompraProdutoJT.setText("");

    }//GEN-LAST:event_filtrarCompraProdutoJTMouseClicked

    private void imprimirJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirJBActionPerformed

        setCursor(Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ));
        
        
        setCursor(Cursor.getPredefinedCursor( Cursor.DEFAULT_CURSOR ));

        // TODO add your handling code here:
    }//GEN-LAST:event_imprimirJBActionPerformed

    private void eliminarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarJBActionPerformed

        if (dataSelecionada() ){
        
        compraHistoricodb = new CompraHistoricodb();
        
        LocalDate dataInicial 
                = LocalDate.parse((CharSequence) dataInicialJC.getSelectedItem().toString() );
        LocalDate dataFinal 
                = LocalDate.parse((CharSequence) dataFinalJC.getSelectedItem().toString() );
        
        compraHistoricodb.delete(dataInicial, dataFinal);
        historicoTableView();
     
        }else
            JOptionPane.showMessageDialog(null, "Seleciona data inicial e final para eliminar",
                    "DATA DE COMPRAS", JOptionPane.ERROR_MESSAGE);
        
        
       
        
    }//GEN-LAST:event_eliminarJBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraHistoricoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraHistoricoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraHistoricoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraHistoricoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompraHistoricoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> dataFinalJC;
    private javax.swing.JComboBox<Object> dataInicialJC;
    private javax.swing.JButton eliminarJB;
    private javax.swing.JTextField filtrarCompraProdutoJT;
    private javax.swing.JButton imprimirJB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable produtotb;
    // End of variables declaration//GEN-END:variables
//
//    private void compraHistoricotb() {
//
//        try {
//
//            if (produtotb.getSelectedRow() != -1) {
//
//                String idCompra = produtotb.getValueAt(produtotb.getSelectedRow(), 0).toString();
//                String nomeCliente = produtotb.getValueAt(produtotb.getSelectedRow(), 1).toString();
//                String nomeProduto = produtotb.getValueAt(produtotb.getSelectedRow(), 2).toString();
//                String quantidade = produtotb.getValueAt(produtotb.getSelectedRow(), 3).toString();
//                String precoUnitario = produtotb.getValueAt(produtotb.getSelectedRow(), 4).toString();
//                String subtotal = produtotb.getValueAt(produtotb.getSelectedRow(), 5).toString();
//                String valorTotal = produtotb.getValueAt(produtotb.getSelectedRow(), 6).toString();
//                String valorClientePagar = produtotb.getValueAt(produtotb.getSelectedRow(), 7).toString();
//                String nomeUsuario = produtotb.getValueAt(produtotb.getSelectedRow(), 8).toString();
//                String lucro = produtotb.getValueAt(produtotb.getSelectedRow(), 9).toString();
//
//
//            }
//
//        } catch (NullPointerException e) {
//            JOptionPane.showMessageDialog(null, "Elimina e cadastra novamente todos os "
//                    + "FORNECEDORES que possuem os dados em branco",
//                    "IMPOSSIVEL MANUZEAR CORRECTAMENTE A BARRA AZUL DA TABELA",
//                    JOptionPane.INFORMATION_MESSAGE);
//        }
//
//    }
//
//    nome_produto, classe_produto, nome_fornecedor,
//                 	   data_fabrico, data_expiracao, data_registo,
//                 	   quantidade, preco, iva, valor_pagar_cliente, 
//                 	   codigo_produto,   
//                 	   usuario_tb.nome_usuario

    public void historicoTableView() {

        compraHistoricodb = new CompraHistoricodb();

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();
        modelo.setNumRows(0);

//        
//        String sql = "SELECT id_compra, cliente_tb.nome_cliente, produto_tb.nome_produto, \n"
//                + "		quantidadee, valor_unitario, sub_total,  \n"
//                + "		valor_total,troco_cliente, compra_historico_tb.iva, "
//                + "             data_compra, hora, usuario_tb.nome_usuario\n"
        
        
        for (CompraHistorico fr : compraHistoricodb.readTodasCompras()) {
            
            
            modelo.addRow(new Object[]{
                fr.getIdCompra(),
                fr.getCliente().getNomeCliente(),
                fr.getNomeProduto(),
                fr.getQuantidade(),
                fr.getValorUnitarioDisplay(),
                fr.getSubTotalDisplay(),
                fr.getValorTotalDisplay(),
                fr.getValorPagarClienteDisplay(),
                fr.getCurrentUser().getNome(),
                fr.getLucroProdutoUnitarioDisplay(),
                fr.getDataCompra()
                
                

            });

        }

    }


    private void dataFinalView() {
   
        compraHistoricodb = new CompraHistoricodb();
        for (LocalDate tempo: compraHistoricodb.filtrarDataCompra()){
            dataInicialJC.addItem(tempo);
        }
    }

    private void dataInicialView() {
        
        
        compraHistoricodb = new CompraHistoricodb();
        for (LocalDate tempo: compraHistoricodb.filtrarDataCompra()){
            dataFinalJC.addItem(tempo);
        }
        
    }

 private boolean dataSelecionada() {

        return dataInicialJC.getSelectedIndex() > 0 && dataInicialJC.getSelectedIndex() > 0;
        /*
         
        0 0  0  1
        0 1  0  0
        1 0  0  0
        1 1  1  0
        */
    }

    private void filtrar() {
  
    
        filtrarCompraProdutoJT.setBackground(Color.green);

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();

        String elemento = filtrarCompraProdutoJT.getText().toUpperCase();

        TableRowSorter<DefaultTableModel> tabela = new TableRowSorter<DefaultTableModel>(modelo);

        produtotb.setRowSorter(tabela);
        tabela.setRowFilter(javax.swing.RowFilter.regexFilter(elemento));
    }


}
