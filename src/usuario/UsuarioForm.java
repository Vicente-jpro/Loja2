/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package usuario;

import Reportes.GerarRelatorio;
import Words.Words;
import funcao.Funcao;
import funcao.Funcaodb;
import java.awt.Color;
import java.awt.Cursor;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import previlegio.Previlegio;
import previlegio.Previlegiodb;

/**
 *
 * @author vicente
 */
public class UsuarioForm extends javax.swing.JFrame {

    private Usuario usuario;
    private UsuarioConnectiondb usuarioConnectiondb;
    private Usuariodb usuariodb;

    private Words transform;

    private Funcaodb funcaodb;
    private Previlegiodb previlegiodb;
    private String funcao_tb = null;

    /**
     * Creates new form UsuarioForm
     */
    public UsuarioForm() {
        super("Cadastro de Funcionarios");
        initComponents();

        this.setLocationRelativeTo(null);
        getRootPane().setDefaultButton(salvarJB);

        transform = Words.getInstance();

        DefaultTableModel modelo = (DefaultTableModel) usuariotb.getModel();
        usuariotb.setRowSorter(new TableRowSorter(modelo));

        usuarioTableView();
        funcaoView();
        privilegioView();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nomeFuncionarioJT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        moradaJTA = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        usuariotb = new javax.swing.JTable();
        telemovel2JT = new javax.swing.JTextField();
        telemovel1JT = new javax.swing.JTextField();
        filtrarNomeFuncionaroJT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        salvarJB = new javax.swing.JButton();
        actualizarJB = new javax.swing.JButton();
        eliminarJB = new javax.swing.JButton();
        imprimirJB = new javax.swing.JButton();
        previlegioJC = new javax.swing.JComboBox<>();
        funcaoJC = new javax.swing.JComboBox<>();
        passwordJT = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        nomeFuncionarioJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        nomeFuncionarioJT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nomeFuncionarioJT.setText("Nome do Funcionário");
        nomeFuncionarioJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nomeFuncionarioJTMouseClicked(evt);
            }
        });
        nomeFuncionarioJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeFuncionarioJTActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("DejaVu Serif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastro de Funcionários");

        moradaJTA.setColumns(20);
        moradaJTA.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        moradaJTA.setRows(5);
        moradaJTA.setText("Endereço. Ex: Localização do Fornecedor");
        moradaJTA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moradaJTAMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moradaJTA);

        usuariotb.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        usuariotb.setForeground(java.awt.Color.black);
        usuariotb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome do Funcionário", "Morada", "Telemovel1", "Telemovel2", "Função", "Privilégio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usuariotb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usuariotbMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                usuariotbMouseReleased(evt);
            }
        });
        usuariotb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usuariotbKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(usuariotb);
        if (usuariotb.getColumnModel().getColumnCount() > 0) {
            usuariotb.getColumnModel().getColumn(0).setResizable(false);
            usuariotb.getColumnModel().getColumn(1).setResizable(false);
            usuariotb.getColumnModel().getColumn(2).setResizable(false);
            usuariotb.getColumnModel().getColumn(3).setResizable(false);
            usuariotb.getColumnModel().getColumn(4).setResizable(false);
            usuariotb.getColumnModel().getColumn(5).setResizable(false);
            usuariotb.getColumnModel().getColumn(6).setResizable(false);
        }

        telemovel2JT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        telemovel2JT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        telemovel2JT.setText("Telemóvel 2");
        telemovel2JT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telemovel2JTMouseClicked(evt);
            }
        });
        telemovel2JT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telemovel2JTActionPerformed(evt);
            }
        });

        telemovel1JT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        telemovel1JT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        telemovel1JT.setText("Telemóvel 1");
        telemovel1JT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                telemovel1JTMouseClicked(evt);
            }
        });
        telemovel1JT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telemovel1JTActionPerformed(evt);
            }
        });

        filtrarNomeFuncionaroJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        filtrarNomeFuncionaroJT.setText("Filtrar Nome do Funcionário");
        filtrarNomeFuncionaroJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtrarNomeFuncionaroJTMouseClicked(evt);
            }
        });
        filtrarNomeFuncionaroJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarNomeFuncionaroJTActionPerformed(evt);
            }
        });
        filtrarNomeFuncionaroJT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filtrarNomeFuncionaroJTKeyTyped(evt);
            }
        });

        jButton1.setText("Imprimir");

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setForeground(java.awt.Color.black);

        salvarJB.setBackground(new java.awt.Color(102, 255, 204));
        salvarJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        salvarJB.setForeground(java.awt.Color.black);
        salvarJB.setText("Salvar");
        salvarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarJBActionPerformed(evt);
            }
        });

        actualizarJB.setBackground(new java.awt.Color(255, 153, 51));
        actualizarJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        actualizarJB.setForeground(java.awt.Color.black);
        actualizarJB.setText("Actualizar");
        actualizarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarJBActionPerformed(evt);
            }
        });

        eliminarJB.setBackground(new java.awt.Color(255, 51, 51));
        eliminarJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        eliminarJB.setForeground(java.awt.Color.black);
        eliminarJB.setText("Eliminar");
        eliminarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarJBActionPerformed(evt);
            }
        });

        imprimirJB.setBackground(new java.awt.Color(102, 255, 204));
        imprimirJB.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        imprimirJB.setForeground(java.awt.Color.black);
        imprimirJB.setText("imprimir");
        imprimirJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirJBActionPerformed(evt);
            }
        });

        previlegioJC.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        previlegioJC.setForeground(java.awt.Color.black);
        previlegioJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Privilégio" }));

        funcaoJC.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        funcaoJC.setForeground(java.awt.Color.black);
        funcaoJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Função" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(salvarJB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(actualizarJB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(eliminarJB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(imprimirJB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(previlegioJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(funcaoJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(funcaoJC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(previlegioJC, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(salvarJB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizarJB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarJB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imprimirJB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        passwordJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        passwordJT.setForeground(new java.awt.Color(0, 0, 153));
        passwordJT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordJT.setText("jPasswordField1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeFuncionarioJT, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(telemovel2JT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(telemovel1JT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordJT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(filtrarNomeFuncionaroJT, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(516, 516, 516))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeFuncionarioJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(filtrarNomeFuncionaroJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(telemovel1JT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(telemovel2JT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordJT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarJBActionPerformed

        eliminar();

        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarJBActionPerformed

    private void nomeFuncionarioJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomeFuncionarioJTMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_nomeFuncionarioJTMouseClicked

    private void nomeFuncionarioJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeFuncionarioJTActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_nomeFuncionarioJTActionPerformed

    private void salvarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarJBActionPerformed

        if (campoNomeMoradaVazioJT()) {

            JOptionPane.showMessageDialog(null, "Os campos de texto Nome do Usuario e Endereco não pode estar vazios",
                    "SALVAR FUNCIONÁRIOS", JOptionPane.ERROR_MESSAGE);

        } else if (funcaoSelecionada() && privilegioSelecionado()) {
            //nome_usuario, endereco, telemovel1, telemovel2, password, whats_app

            // pesquisar a nome de produto na lista    
            String nomeUsuari = nomeFuncionarioJT.getText().toUpperCase();

            String nomeUsuario = transform.toUpperCaseAllFirsLetter(nomeUsuari);
            String endereco = moradaJTA.getText().toUpperCase();
            String telemovel1 = telemovel1JT.getText();
            String telemovel2 = telemovel2JT.getText();
            String password = passwordJT.getText();

            usuario = new Usuario();
            usuario.setNome(nomeUsuario);
            usuario.setEndereco(endereco);
            usuario.setTelemovel1(telemovel1);
            usuario.setTelemovel2(telemovel2);
            usuario.setPassword(password);

            // Get id da Funcao
            funcaodb = new Funcaodb();
            int idFuncao = funcaodb.getIdFuncao(funcaoJC.getSelectedItem().toString());
            usuario.setFuncao(new Funcao(idFuncao));

            // Get id da Privilégio
            previlegiodb = new Previlegiodb();
            int idPrivilegio = previlegiodb.getIdPrevilegio(previlegioJC.getSelectedItem().toString());
            usuario.setPrevilegio(new Previlegio(idPrivilegio));

            usuarioConnectiondb = new UsuarioConnectiondb();

            usuarioConnectiondb.salvar(usuario);

            usuarioTableView();
        } else {
            JOptionPane.showMessageDialog(null, "Seleciona uma Função e um Privilégio",
                    "SALVAR FUNCIONÁRIOS", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_salvarJBActionPerformed

    private void actualizarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarJBActionPerformed

        actualizar();

        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarJBActionPerformed

    private void moradaJTAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moradaJTAMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_moradaJTAMouseClicked

    private void usuariotbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuariotbMouseClicked

        usuariotb();


    }//GEN-LAST:event_usuariotbMouseClicked

    private void usuariotbMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usuariotbMouseReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_usuariotbMouseReleased

    private void usuariotbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usuariotbKeyReleased

        usuariotb();
        // TODO add your handling code here:
    }//GEN-LAST:event_usuariotbKeyReleased

    private void telemovel2JTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telemovel2JTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_telemovel2JTMouseClicked

    private void telemovel2JTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telemovel2JTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telemovel2JTActionPerformed

    private void telemovel1JTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_telemovel1JTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_telemovel1JTMouseClicked

    private void telemovel1JTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telemovel1JTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telemovel1JTActionPerformed

    private void imprimirJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirJBActionPerformed

        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        imprimir();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

        // TODO add your handling code here:
    }//GEN-LAST:event_imprimirJBActionPerformed

    private void filtrarNomeFuncionaroJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtrarNomeFuncionaroJTMouseClicked

        filtrarNomeFuncionaroJT.setText("");


    }//GEN-LAST:event_filtrarNomeFuncionaroJTMouseClicked

    private void filtrarNomeFuncionaroJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarNomeFuncionaroJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarNomeFuncionaroJTActionPerformed

    private void filtrarNomeFuncionaroJTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtrarNomeFuncionaroJTKeyTyped

        filtrarNomeFuncionaroJT.setBackground(Color.green);

        DefaultTableModel modelo = (DefaultTableModel) usuariotb.getModel();

        String elemento = filtrarNomeFuncionaroJT.getText().toUpperCase();

        TableRowSorter<DefaultTableModel> tabela = new TableRowSorter<DefaultTableModel>(modelo);

        usuariotb.setRowSorter(tabela);
        tabela.setRowFilter(javax.swing.RowFilter.regexFilter(elemento));

        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarNomeFuncionaroJTKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsuarioForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarJB;
    private javax.swing.JButton eliminarJB;
    private javax.swing.JTextField filtrarNomeFuncionaroJT;
    private javax.swing.JComboBox<Object> funcaoJC;
    private javax.swing.JButton imprimirJB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea moradaJTA;
    private javax.swing.JTextField nomeFuncionarioJT;
    private javax.swing.JPasswordField passwordJT;
    private javax.swing.JComboBox<Object> previlegioJC;
    private javax.swing.JButton salvarJB;
    private javax.swing.JTextField telemovel1JT;
    private javax.swing.JTextField telemovel2JT;
    private javax.swing.JTable usuariotb;
    // End of variables declaration//GEN-END:variables

    private boolean campoNomeMoradaVazioJT() {

        return nomeFuncionarioJT.getText().isEmpty()
                || "Nome do usuario".equals(nomeFuncionarioJT.getText())
                || moradaJTA.getText().isEmpty()
                || "Endereço. Ex: Localização do Usuario".equals(moradaJTA.getText()); // true
    }

    private void usuariotb() {

        try {

            if (usuariotb.getSelectedRow() != -1) {

                String nomeUsuario = usuariotb.getValueAt(usuariotb.getSelectedRow(), 1).toString();
                String endereco = usuariotb.getValueAt(usuariotb.getSelectedRow(), 2).toString();
                String telemovel1 = usuariotb.getValueAt(usuariotb.getSelectedRow(), 3).toString();
                String telemovel2 = usuariotb.getValueAt(usuariotb.getSelectedRow(), 4).toString();
                this.funcao_tb = usuariotb.getValueAt(usuariotb.getSelectedRow(), 5).toString();
                nomeFuncionarioJT.setText(nomeUsuario);
                moradaJTA.setText(endereco);
                telemovel1JT.setText(telemovel1);
                telemovel2JT.setText(telemovel2);

            }

        } catch (IndexOutOfBoundsException e) {

        }

    }

    private void actualizar(String opcao) {

        usuario = new Usuario();

        int idFuncao = 0;
        int idPrivilegio = 0;
        switch (opcao) {
            case "funcao": // Actualizar o usuario com a sua funcao
                funcaodb = new Funcaodb();
                idFuncao = funcaodb.getIdFuncao(funcaoJC.getSelectedItem().toString());
                usuario.setFuncao(new Funcao(idFuncao));
                break;
            case "privilegio": // Actualizar o usuario com o seu privilegio
                previlegiodb = new Previlegiodb();
                idPrivilegio = previlegiodb.getIdPrevilegio(previlegioJC.getSelectedItem().toString());
                usuario.setPrevilegio(new Previlegio(idPrivilegio));
                break;
            case "funcao e privilegio":
                break;
            default: // Salva sem a funcao e o previlegio.
                break;

        }

        usuarioConnectiondb = new UsuarioConnectiondb();

        String usuari = usuariotb.getValueAt(usuariotb.getSelectedRow(), 0).toString();
        int idUsuario = Integer.parseInt(usuari);

        // pesquisar a nome de produto na lista      
        String nomeUsuari = nomeFuncionarioJT.getText().toUpperCase();

        String nomeUsuario = transform.toUpperCaseAllFirsLetter(nomeUsuari);

        String endereco = moradaJTA.getText().toUpperCase();
        String telemovel1 = telemovel1JT.getText();
        String telemovel2 = telemovel2JT.getText();
        String password = passwordJT.getText();

        usuario.setIdUsuario(idUsuario);
        usuario.setNome(nomeUsuario);
        usuario.setEndereco(endereco);
        usuario.setTelemovel1(telemovel1);
        usuario.setTelemovel2(telemovel2);
        usuario.setPassword(password);

        usuarioConnectiondb.actualizar(usuario, opcao);

    }

    private void usuarioTableView() {

        usuariodb = new Usuariodb();

        DefaultTableModel modelo = (DefaultTableModel) usuariotb.getModel();
        modelo.setNumRows(0);

        for (Usuario fr : usuariodb.read()) {
            modelo.addRow(new Object[]{
                fr.getIdUsuario(),
                fr.getNome(),
                fr.getEndereco(),
                fr.getTelemovel1(),
                fr.getTelemovel2(),
                fr.getFuncao().getDescricao(),
                fr.getPrevilegio().getDescricao()

            });

        }

    }

    private boolean usuarioSelecionado_tb() {

        return usuariotb.getSelectedRow() != -1;
    }

    private boolean todosCamposVazios() {

        return nomeFuncionarioJT.getText().isEmpty()
                || moradaJTA.getText().isEmpty()
                || telemovel1JT.getText().isEmpty()
                || telemovel2JT.getText().isEmpty()
                || passwordJT.getText().isEmpty();

    }

    public void funcaoView() {

        funcaodb = new Funcaodb();

        for (Funcao element : funcaodb.read()) {

            funcaoJC.addItem(element);
        }

    }

    public void privilegioView() {

        previlegiodb = new Previlegiodb();

        for (Previlegio element : previlegiodb.read()) {

            previlegioJC.addItem(element);
        }

    }

    private boolean funcaoSelecionada() {
        return funcaoJC.getSelectedIndex() > 0;
    }

    private boolean privilegioSelecionado() {
        return previlegioJC.getSelectedIndex() > 0;
    }

    private void actualizar() {

        // Se o usuario da tabela for selecionado.
        if (usuarioSelecionado_tb()) {
            if (funcao_tb.equalsIgnoreCase("Desenvolvedor")) {
                JOptionPane.showMessageDialog(null, "Não é possível actualizar um Desenvolvedor",
                        "ACTUALIZAR FUNCIONÁRIOS ", JOptionPane.ERROR_MESSAGE);
            } else if (campoNomeMoradaVazioJT()) {
                JOptionPane.showMessageDialog(null, "Os campos de Texto não pode estar vazios",
                        "ACTUALIZAR FUNCIONÁRIOS ", JOptionPane.ERROR_MESSAGE);
            } else if (funcaoSelecionada()) {
                actualizar("funcao");
            } else if (privilegioSelecionado()) {
                actualizar("privilegio");
            } else {
                actualizar("actualizar sem a funcao e o privilegio");
            }
            usuarioTableView();

        } else {

            JOptionPane.showMessageDialog(null, "Seleciona um elemento para modificar",
                    "TABELA DE FUNCIONÁRIOS", JOptionPane.ERROR_MESSAGE);

        }

    }

    private void eliminar() {
        // Se o usuario da tabela não for selecionado.
        if (usuariotb.getSelectedRow() != -1) {
            if (funcao_tb.equalsIgnoreCase("Desenvolvedor")) {
                JOptionPane.showMessageDialog(null, "Não é possível eliminar um Desenvolvedor",
                        "ELIMINAR FUNCIONÁRIOS ", JOptionPane.ERROR_MESSAGE);
            } else {

                try {

                    usuarioConnectiondb = new UsuarioConnectiondb();

                    String idClient = usuariotb.getValueAt(usuariotb.getSelectedRow(), 0).toString();
                    int idUsuario = Integer.parseInt(idClient);

                    usuarioConnectiondb.eliminar(idUsuario);
                    usuarioTableView();

                } catch (IndexOutOfBoundsException | NumberFormatException e) {

                }

            }
        } else {

            JOptionPane.showMessageDialog(null, "Seleciona um elemento para modificar",
                    "TABELA DE FUNCIONÁRIOS", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void imprimir() {

        new GerarRelatorio("usuarios.jasper").gerarRelatorio();

        usuariodb = new Usuariodb();
        usuariodb.updateSequenceNumber();

    }
}
