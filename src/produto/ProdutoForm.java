/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package produto;

import Iva.Iva;
import Reportes.GerarRelatorio;
import Words.Words;
import classificacao_produto.ClassificacaoProduto;
import classificacao_produto.ClassificacaoProdutodb;
import currentDateAndTime.CurrentDateAndTime;
import current_user.CurrentUser;
import current_user.CurrentUserdb;
import fornecedor.Fornecedor;
import fornecedor.Fornecedordb;
import java.awt.Color;
import java.awt.Cursor;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import util.RemoveSpace;

/**
 *
 * @author vicente
 */
public class ProdutoForm extends javax.swing.JFrame {

    private Produto produto;
    private ProdutoConnectiondb produtoConnectiondb;
    private Produtodb produtodb;
    private ProdutoUpdatedb produtoUpdatedb;

    private Iva precoProduto;

    private Fornecedordb fornecedordb;
    private ClassificacaoProdutodb classificacaoProdutodb;

    private CurrentUserdb currentUserdb;

    private boolean pressionou;

    private CurrentDateAndTime time;

    /**
     * Creates new form ProdutoForm
     */
    public ProdutoForm() {
        super("Cadastro de Produtos");
        initComponents();

        this.setLocationRelativeTo(null);
        getRootPane().setDefaultButton(actualizarJB);

        time = new CurrentDateAndTime();

        this.pressionou = false;

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();
        produtotb.setRowSorter(new TableRowSorter(modelo));

        //  setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        classeProdutoView();
        fornecedorView();
        produtoTableView();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        actualizarJB = new javax.swing.JButton();
        eliminarJB = new javax.swing.JButton();
        imprimirJB = new javax.swing.JButton();
        imprimirTudoJB = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lucroJT = new javax.swing.JTextField();
        precoJT = new javax.swing.JTextField();
        acrescentarJT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        quantidadeJT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        codigoProdutoJT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        DataExpiracaoJCA = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        dataFabricacaoJCA = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nomeProdutoJT = new javax.swing.JTextField();
        nomeFornecedorJC = new javax.swing.JComboBox<>();
        classeProdutoJC = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProdutoJTA = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        filtrarNomeProdutoJT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        produtotb = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("DejaVu Serif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastro de Produtos");

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        actualizarJB.setBackground(new java.awt.Color(102, 255, 204));
        actualizarJB.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        actualizarJB.setForeground(java.awt.Color.black);
        actualizarJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update-button-32.png"))); // NOI18N
        actualizarJB.setText("Actualizar");
        actualizarJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        actualizarJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        actualizarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarJBActionPerformed(evt);
            }
        });

        eliminarJB.setBackground(new java.awt.Color(255, 51, 51));
        eliminarJB.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        eliminarJB.setForeground(java.awt.Color.black);
        eliminarJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete-black-32.png"))); // NOI18N
        eliminarJB.setText("Eliminar");
        eliminarJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarJBActionPerformed(evt);
            }
        });

        imprimirJB.setBackground(new java.awt.Color(102, 255, 204));
        imprimirJB.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        imprimirJB.setForeground(java.awt.Color.black);
        imprimirJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf-32.png"))); // NOI18N
        imprimirJB.setText("Imprimir");
        imprimirJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirJBActionPerformed(evt);
            }
        });

        imprimirTudoJB.setBackground(new java.awt.Color(102, 255, 204));
        imprimirTudoJB.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        imprimirTudoJB.setForeground(java.awt.Color.black);
        imprimirTudoJB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pdf-32.png"))); // NOI18N
        imprimirTudoJB.setText("Imprimir tudo");
        imprimirTudoJB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        imprimirTudoJB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        imprimirTudoJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirTudoJBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(actualizarJB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(eliminarJB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(imprimirJB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imprimirTudoJB, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(actualizarJB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarJB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imprimirJB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imprimirTudoJB)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));

        lucroJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        lucroJT.setText("Lucro desse produto");
        lucroJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lucroJTMouseClicked(evt);
            }
        });
        lucroJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lucroJTActionPerformed(evt);
            }
        });

        precoJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        precoJT.setText("Preço");
        precoJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                precoJTMouseClicked(evt);
            }
        });
        precoJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precoJTActionPerformed(evt);
            }
        });

        acrescentarJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        acrescentarJT.setText("Acrescentar");
        acrescentarJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acrescentarJTMouseClicked(evt);
            }
        });
        acrescentarJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acrescentarJTActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("+");

        quantidadeJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        quantidadeJT.setText("Quantidade");
        quantidadeJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quantidadeJTMouseClicked(evt);
            }
        });
        quantidadeJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeJTActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Quantidade");

        jLabel7.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Acrescentar");

        jLabel8.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Preço");

        jLabel9.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Lucro Unitário");

        codigoProdutoJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        codigoProdutoJT.setText("Código do Produto");
        codigoProdutoJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codigoProdutoJTMouseClicked(evt);
            }
        });
        codigoProdutoJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoProdutoJTActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("Código do Produto");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel7))
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(codigoProdutoJT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lucroJT, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(precoJT, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(quantidadeJT, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(acrescentarJT, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel10)))
                        .addContainerGap(28, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantidadeJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acrescentarJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(precoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lucroJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codigoProdutoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));

        DataExpiracaoJCA.setDateFormatString("yyyy/MM/dd");
        DataExpiracaoJCA.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Data de Expiração");

        dataFabricacaoJCA.setDateFormatString("yyyy/MM/dd");
        dataFabricacaoJCA.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Data de Fabricação");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DataExpiracaoJCA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dataFabricacaoJCA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dataFabricacaoJCA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DataExpiracaoJCA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));

        jLabel5.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Nome do Produto");

        nomeProdutoJT.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        nomeProdutoJT.setText("Nome do Produto");
        nomeProdutoJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nomeProdutoJTMouseClicked(evt);
            }
        });
        nomeProdutoJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeProdutoJTActionPerformed(evt);
            }
        });

        nomeFornecedorJC.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        nomeFornecedorJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome do Fornecedor" }));

        classeProdutoJC.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        classeProdutoJC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classe do Produto" }));
        classeProdutoJC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classeProdutoJCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeProdutoJT)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nomeFornecedorJC, 0, 239, Short.MAX_VALUE)
                    .addComponent(classeProdutoJC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeProdutoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nomeFornecedorJC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classeProdutoJC, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProdutoJTA.setColumns(20);
        ProdutoJTA.setFont(new java.awt.Font("DejaVu Serif", 1, 15)); // NOI18N
        ProdutoJTA.setForeground(java.awt.Color.black);
        ProdutoJTA.setRows(5);
        ProdutoJTA.setText("*************Dados do Produto Cadastrado************\n1 - Nome do Produto:\n2 - Classe do Produto:\n3 - Nome do Fornecedor:\n4 - Data de Fabricação:\n5 - Data de Expiração:\n6 - Data de Registo:\n7 - Quantidade:\n8 - Preço:\n9 - IVA:\n10 - Valor a Pagar pelo Cliente:\n11 - Código do Produto:\n12 - Funcionário:\n13 - Lucro:\n");
        jScrollPane1.setViewportView(ProdutoJTA);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        filtrarNomeProdutoJT.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        filtrarNomeProdutoJT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        filtrarNomeProdutoJT.setText("Filtrar Nome do Produto / Fornecedor");
        filtrarNomeProdutoJT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtrarNomeProdutoJTMouseClicked(evt);
            }
        });
        filtrarNomeProdutoJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarNomeProdutoJTActionPerformed(evt);
            }
        });
        filtrarNomeProdutoJT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filtrarNomeProdutoJTKeyTyped(evt);
            }
        });

        produtotb.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        produtotb.setForeground(java.awt.Color.black);
        produtotb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome Produto", "Classe Produto", "Nome Fornecedor", "Data Fabrico", "Data Expiração", "Data Registo", "Quantidade", "Preço", "IVA", "Valor Cliente", "Código Produto", "Funcionário", "Lucro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtotb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                produtotbMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                produtotbMouseReleased(evt);
            }
        });
        produtotb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                produtotbKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(produtotb);
        if (produtotb.getColumnModel().getColumnCount() > 0) {
            produtotb.getColumnModel().getColumn(0).setResizable(false);
            produtotb.getColumnModel().getColumn(1).setResizable(false);
            produtotb.getColumnModel().getColumn(2).setResizable(false);
            produtotb.getColumnModel().getColumn(3).setResizable(false);
            produtotb.getColumnModel().getColumn(4).setResizable(false);
            produtotb.getColumnModel().getColumn(5).setResizable(false);
            produtotb.getColumnModel().getColumn(6).setResizable(false);
            produtotb.getColumnModel().getColumn(7).setResizable(false);
            produtotb.getColumnModel().getColumn(8).setResizable(false);
            produtotb.getColumnModel().getColumn(9).setResizable(false);
            produtotb.getColumnModel().getColumn(10).setResizable(false);
            produtotb.getColumnModel().getColumn(11).setResizable(false);
            produtotb.getColumnModel().getColumn(12).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1346, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(filtrarNomeProdutoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 1323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(filtrarNomeProdutoJT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(285, 285, 285))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(567, 567, 567)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1353, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtrarNomeProdutoJTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtrarNomeProdutoJTKeyTyped

        filtra();

        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarNomeProdutoJTKeyTyped

    private void filtrarNomeProdutoJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarNomeProdutoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarNomeProdutoJTActionPerformed

    private void filtrarNomeProdutoJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtrarNomeProdutoJTMouseClicked

        filtrarNomeProdutoJT.setText("");

    }//GEN-LAST:event_filtrarNomeProdutoJTMouseClicked

    private void imprimirJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirJBActionPerformed

        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
        imprimir("");
        
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

    }//GEN-LAST:event_imprimirJBActionPerformed

    private void precoJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precoJTActionPerformed

    private void precoJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_precoJTMouseClicked

        precoJT.setText("");
    }//GEN-LAST:event_precoJTMouseClicked

    private void quantidadeJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeJTActionPerformed

    private void quantidadeJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quantidadeJTMouseClicked

        quantidadeJT.setText("");
    }//GEN-LAST:event_quantidadeJTMouseClicked

    private void produtotbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_produtotbKeyReleased

        produtotb();
        // TODO add your handling code here:
    }//GEN-LAST:event_produtotbKeyReleased

    private void produtotbMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtotbMouseReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_produtotbMouseReleased

    private void produtotbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtotbMouseClicked

        produtotb();

    }//GEN-LAST:event_produtotbMouseClicked

    private void nomeProdutoJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeProdutoJTActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_nomeProdutoJTActionPerformed

    private void nomeProdutoJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomeProdutoJTMouseClicked

        if (!pressionou) {
            nomeProdutoJT.setText("");
            pressionou = true;
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_nomeProdutoJTMouseClicked

    private void actualizarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarJBActionPerformed

        // se o fornecedor e a classe de prooduto for selecionada e o caompo de texto não estiver vazio
        if (nomeFornecedorClasseProdutoSelecionados() && !camposJTextVazio()) {
            //  System.out.println("if 2");
            actualizarComFornecedorClassificacao();
        } else if (!nomeFornecedorClasseProdutoSelecionados() && !camposJTextVazio()) {
            //  System.out.println("if 3");
            actualisarComData(); // actualiza com a data se ela for selecionada
        } else {
            JOptionPane.showMessageDialog(null, "Para actualizares um produto tu tens 3 opções:\n"
                    + "1 - Selecionar o Fornecedor e a Classsificação do Produto"
                    + "2 - Selecionar as datas \"(Fabricação e Expiração)\" ",
                    "ERRO NA ACTUALIZAÇÃO DO PRODUTO", JOptionPane.ERROR_MESSAGE);
        }
        // 

        /// 
        // 
    }//GEN-LAST:event_actualizarJBActionPerformed

    private void eliminarJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarJBActionPerformed

        // Se o produto da tabela não for selecionado.
        if (produtotb.getSelectedRow() == -1) {

            JOptionPane.showMessageDialog(null, "Seleciona um elemento para modificar",
                    "TABELA DE FORNECEDOR", JOptionPane.ERROR_MESSAGE);

        } else {

            produtoConnectiondb = new ProdutoConnectiondb();

            String nomeProduto = produtotb.getValueAt(produtotb.getSelectedRow(), 0).toString();

            produto = new Produto();

            produto.setNomeProduto(nomeProduto);
            produtoConnectiondb.eliminar(produto);

            produtoTableView();

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarJBActionPerformed

    private void lucroJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lucroJTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lucroJTMouseClicked

    private void lucroJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lucroJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lucroJTActionPerformed

    private void acrescentarJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acrescentarJTMouseClicked

        acrescentarJT.setText("");
    }//GEN-LAST:event_acrescentarJTMouseClicked

    private void acrescentarJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acrescentarJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acrescentarJTActionPerformed

    private void classeProdutoJCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classeProdutoJCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classeProdutoJCActionPerformed

    private void codigoProdutoJTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codigoProdutoJTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoProdutoJTMouseClicked

    private void codigoProdutoJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoProdutoJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoProdutoJTActionPerformed

    private void imprimirTudoJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirTudoJBActionPerformed
        setCursor(Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR ));
        imprimir("imprimir-tudo");
        setCursor(Cursor.getPredefinedCursor( Cursor.DEFAULT_CURSOR ));
    }//GEN-LAST:event_imprimirTudoJBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new ProdutoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DataExpiracaoJCA;
    private javax.swing.JTextArea ProdutoJTA;
    private javax.swing.JTextField acrescentarJT;
    private javax.swing.JButton actualizarJB;
    private javax.swing.JComboBox<Object> classeProdutoJC;
    private javax.swing.JTextField codigoProdutoJT;
    private com.toedter.calendar.JDateChooser dataFabricacaoJCA;
    private javax.swing.JButton eliminarJB;
    private javax.swing.JTextField filtrarNomeProdutoJT;
    private javax.swing.JButton imprimirJB;
    private javax.swing.JButton imprimirTudoJB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lucroJT;
    private javax.swing.JComboBox<Object> nomeFornecedorJC;
    private javax.swing.JTextField nomeProdutoJT;
    private javax.swing.JTextField precoJT;
    private javax.swing.JTable produtotb;
    private javax.swing.JTextField quantidadeJT;
    // End of variables declaration//GEN-END:variables

    // Verificar os campos de texto
    private boolean camposJTextVazio() {

        return nomeProdutoJT.getText().isEmpty()
                || "Nome do produto".equals(nomeProdutoJT.getText())
                || quantidadeJT.getText().isEmpty()
                || "Quantidade".equals(quantidadeJT.getText())
                || precoJT.getText().isEmpty()
                || "Preço".equals(precoJT.getText())
                || codigoProdutoJT.getText().isEmpty()
                || "Código do Produto".equals(codigoProdutoJT.getText())
                || lucroJT.getText().isEmpty()
                || "Lucro desse produto".equals(codigoProdutoJT.getText()); // true
    }

    private void produtotb() {

        try {

            if (produtotb.getSelectedRow() != -1 && !todosCamposVazios()) {

                String nomeProduto = produtotb.getValueAt(produtotb.getSelectedRow(), 0).toString();
                String classeProduto = produtotb.getValueAt(produtotb.getSelectedRow(), 1).toString();
                String nomeFornecedor = produtotb.getValueAt(produtotb.getSelectedRow(), 2).toString();
                String dataFabrico = produtotb.getValueAt(produtotb.getSelectedRow(), 3).toString();
                String dataExpiracao = produtotb.getValueAt(produtotb.getSelectedRow(), 4).toString();
                String dataRegisto = produtotb.getValueAt(produtotb.getSelectedRow(), 5).toString();
                String quantidade = produtotb.getValueAt(produtotb.getSelectedRow(), 6).toString();
                String preco = produtotb.getValueAt(produtotb.getSelectedRow(), 7).toString();

                String iva = produtotb.getValueAt(produtotb.getSelectedRow(), 8).toString();
                String valorClientePagar = produtotb.getValueAt(produtotb.getSelectedRow(), 9).toString();
                String codigoProduto = produtotb.getValueAt(produtotb.getSelectedRow(), 10).toString();
                String nomeUsuario = produtotb.getValueAt(produtotb.getSelectedRow(), 11).toString();
                String lucro = produtotb.getValueAt(produtotb.getSelectedRow(), 12).toString();

                setAllTextField(nomeProduto, quantidade, preco, codigoProduto, lucro);

                setTextArea(nomeProduto, classeProduto, nomeFornecedor, dataFabrico, dataExpiracao,
                        dataRegisto, quantidade, preco, iva, valorClientePagar, codigoProduto, nomeUsuario, lucro);

            }

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Elimina e cadastra novamente todos os "
                    + "FORNECEDORES que possuem os dados em branco",
                    "IMPOSSIVEL MANUZEAR CORRECTAMENTE A BARRA AZUL DA TABELA",
                    JOptionPane.INFORMATION_MESSAGE);
        }

    }
//
//    nome_produto, classe_produto, nome_fornecedor,
//                 	   data_fabrico, data_expiracao, data_registo,
//                 	   quantidade, preco, iva, valor_pagar_cliente, 
//                 	   codigo_produto,   
//                 	   usuario_tb.nome_usuario

    private void produtoTableView() {

        produtodb = new Produtodb();

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();
        modelo.setNumRows(0);

        for (Produto fr : produtodb.read()) {
            modelo.addRow(new Object[]{
                fr.getNomeProduto(),
                fr.getClasseProduto(),
                fr.getFornecedor().getNomeFornecedor(),
                fr.getDataFabrico(),
                fr.getDataExpiracao(),
                fr.getDataRegisto(),
                fr.getQuantidade(),
                fr.getPrecoDisplay(),
                fr.getIvaDisplay(),
                fr.getValorPagarClienteDisplay(),
                fr.getCodigoProduto(),
                fr.getCurrentUser().getNome(),
                fr.getLucroProdutoUnitarioDisplay()

            });

        }

    }

    private boolean produtoSelecionado_tb() {

        return produtotb.getSelectedRow() != -1;
    }

    private boolean todosCamposVazios() {

        return nomeProdutoJT.getText().isEmpty()
                || quantidadeJT.getText().isEmpty() //|| dataFabricacaoJT.getText().isEmpty()
                //|| dataExpiracaoJC.getText().isEmpty()
                ;

    }

    private void classeProdutoView() {

        classificacaoProdutodb = new ClassificacaoProdutodb();

        for (ClassificacaoProduto pro : classificacaoProdutodb.read()) {
            classeProdutoJC.addItem(pro);

        }

    }

    private void fornecedorView() {

        fornecedordb = new Fornecedordb();

        for (Fornecedor forne : fornecedordb.readCombobox()) {
            nomeFornecedorJC.addItem(forne);
        }

    }

    private boolean acrescentarVazioJT() {

        return acrescentarJT.getText().isEmpty()
                || "Acrescentar".equals(acrescentarJT.getText().trim()); // true
    }

    private void setAllTextField(String nomeProduto, String quantidade,
            String preco, String codigoProduto, String lucro) {

        RemoveSpace space = new RemoveSpace();

        quantidade = space.remove(quantidade);
        preco = space.remove(preco);
        lucro = space.remove(lucro);
        nomeProdutoJT.setText(nomeProduto);
        quantidadeJT.setText(quantidade);
        precoJT.setText(preco);
        lucroJT.setText(lucro);
        codigoProdutoJT.setText(codigoProduto);

    }

    private void setTextArea(String nomeProduto, String classeProduto, String nomeFornecedor,
            String dataFabrico, String dataExpiracao, String dataRegisto, String quantidade,
            String preco, String iva, String valorClientePagar,
            String codigoProduto, String nomeUsuario, String lucro) {

        ProdutoJTA.setText("*************Dados do Produto Cadastrado************\n"
                + "1 - Nome do Produto: " + nomeProduto + " \n"
                + "2 - Classe do Produto: " + classeProduto + "\n"
                + "3 - Nome do Fornecedor: " + nomeFornecedor + "\n\n"
                + "4 - Data de Fabricação:" + dataFabrico + "\n"
                + "5 - Data de Expiração: " + dataExpiracao + "\n"
                + "6 - Data de Registo: " + dataRegisto + "\n"
                + "7 - Quantidade: " + quantidade + " \n\n"
                + "8 - Preço: " + preco + "\n"
                + "9 - IVA:  " + iva + "\n"
                + "10 - Valor a Pagar pelo Cliente: " + valorClientePagar + "\n\n"
                + "11 - Código do Produto: " + codigoProduto + " \n"
                + "12 - Funcionário: " + nomeUsuario + "\n"
                + "13 - Lucro: " + lucro + "\n"
        );
    }

    private boolean nomeFornecedorClasseProdutoSelecionados() {

        // se o nome do fornecedor e do produto for selecionado
        return nomeFornecedorJC.getSelectedIndex() > 0
                || classeProdutoJC.getSelectedIndex() > 0; // true
    }

    // O usuario deve escolher uma data de Expiracao e de Fabricação
    private void actualisarComData() {

        try {
            // Get date from Jcalendar-Chooser
            DateFormat dataF = new SimpleDateFormat("yyyy-MM-dd");
            String dataFabricacao = dataF.format(dataFabricacaoJCA.getDate());

            DateFormat dataE = new SimpleDateFormat("yyyy-MM-dd");
            String dataExpiracao = dataE.format(DataExpiracaoJCA.getDate());

            produtodb = new Produtodb();
            // pesquisar a nome de produto na lista
            String nomeProduto = nomeProdutoJT.getText().toUpperCase().trim();

            //------------------------------------------------------------------
            String quantidad = quantidadeJT.getText().trim();
            int quantidade = Integer.parseInt(quantidad);

            String acrescenta = acrescentarJT.getText().trim();

            int acrescentar = 0;
            int novaQuantidade = 0;
            if (!acrescentarVazioJT()) {

                acrescenta = acrescentarJT.getText().trim();
                acrescentar = Integer.parseInt(acrescenta);
                novaQuantidade = quantidade + acrescentar;

            } else {
                novaQuantidade = quantidade;
            }

            String prec = precoJT.getText().trim(); // preço em String 

            double preco = Double.parseDouble(prec); // Preço do produto: 1.000.00kz

            produto = new Produto();

            precoProduto = new Iva(preco);
            // IVA = 14% = 0.14 
            double iva = precoProduto.getProdutoIva(); // Valor do IVA = 140
            double valorPagarCliente = precoProduto.getNovoPrecoComIva();  // Valor a pagar pelo cliente: 1.140,00kz

            String codigoProduto = codigoProdutoJT.getText().trim();

            time = new CurrentDateAndTime();
            LocalDate dataActual = time.getCurrentDate();

            Double lucro = Double.parseDouble(lucroJT.getText());

            LocalDate data_fabricacao = time.toLocalDate(dataFabricacao);
            LocalDate data_expiracao = time.toLocalDate(dataExpiracao);

            produto = new Produto(nomeProduto, data_fabricacao, data_expiracao, dataActual,
                    quantidade, codigoProduto, preco, iva, valorPagarCliente, lucro);

            // Buscar o Usuario corrente fez o login na aplicacão;
            currentUserdb = new CurrentUserdb();
            int idCurrenteUser = currentUserdb.feachIdCurrentUser();
            produto.setCurrentUser(new CurrentUser(idCurrenteUser));

            // Salvar todos os item no banco de dados
            produtoUpdatedb = new ProdutoUpdatedb();
            produtoUpdatedb.actualizarComData(produto);

            produtoTableView();

        } catch (NullPointerException | NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Data de Expiracao e de Fabricação invalida.\n"
                    + "O sistema vai actualizar apenas outros campos",
                    "ERRO AO ACTUALIZAR O PRODUTO", JOptionPane.ERROR_MESSAGE);

            // Não selecionou a data, então actualiza sem as datas e o fornecedor
            actualizar();
            //  e.printStackTrace();
        }
    }

    // O usuario deve escolher um Fornecedor e uma Classificaçao
    private void actualizarComFornecedorClassificacao() {

        try {
            // ---------------------------FOREIGN KEY--------------------------- 
            // Get fornecedor ID to save on Produtos
            String nomeFornecedor = nomeFornecedorJC.getSelectedItem().toString();
            fornecedordb = new Fornecedordb();
            int idFornecedor = fornecedordb.getIdClente(nomeFornecedor);

            // Get fornecedor ID to save on Produtos
            classificacaoProdutodb = new ClassificacaoProdutodb();
            String classeProduto = classeProdutoJC.getSelectedItem().toString();
            int idClasseProduto = classificacaoProdutodb.getIdClassificacaoProduto(classeProduto);

            produtodb = new Produtodb();
            // pesquisar a nome de produto na lista
            String nomeProduto = nomeProdutoJT.getText().toUpperCase();

            //------------------------------------------------------------------
            String quantidad = quantidadeJT.getText().trim();
            int quantidade = Integer.parseInt(quantidad);

            String acrescenta = acrescentarJT.getText().trim();

            int acrescentar = 0;
            int novaQuantidade = 0;
            if (!acrescentarVazioJT()) {

                acrescenta = acrescentarJT.getText().trim();
                acrescentar = Integer.parseInt(acrescenta);
                novaQuantidade = quantidade + acrescentar;

            } else {
                novaQuantidade = quantidade;
            }

            String prec = precoJT.getText().trim(); // preço em String 

            double preco = Double.parseDouble(prec); // Preço do produto: 1.000.00kz

            produto = new Produto();

            precoProduto = new Iva(preco);
            // IVA = 14% = 0.14 
            double iva = precoProduto.getProdutoIva(); // Valor do IVA = 140
            double valorPagarCliente = precoProduto.getNovoPrecoComIva();  // Valor a pagar pelo cliente: 1.140,00kz

            String codigoProduto = codigoProdutoJT.getText().trim();

            time = new CurrentDateAndTime();
            LocalDate dataActual = time.getCurrentDate();

            double lucro = Double.parseDouble(lucroJT.getText().trim());

            produto = new Produto(nomeProduto, dataActual,
                    novaQuantidade, codigoProduto, preco, iva, valorPagarCliente, lucro);

//            
            // Definir a classificacao do produdo no cadastro
            produto.setIdClassificacao(idClasseProduto);

            // definir o fornecedor no cadastro
            produto.setFornecedor(new Fornecedor(idFornecedor));

            // Buscar o Usuario corrente fez o login na aplicacão;
            currentUserdb = new CurrentUserdb();
            int idCurrenteUser = currentUserdb.feachIdCurrentUser();
            produto.setCurrentUser(new CurrentUser(idCurrenteUser));

            // Salvar todos os item no banco de dados
            produtoUpdatedb = new ProdutoUpdatedb();
            produtoUpdatedb.actualizarComFornecedorClassificacao(produto);

            produtoTableView();

        } catch (NullPointerException | NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Fornecedor e Classificaçao invalida."
                    + "\nSeleciona um Fornecedor e uma Classificação para Actualizar",
                    "ERRO AO ACTUALIZAR O PRODUTO", JOptionPane.ERROR_MESSAGE);

        }
    }

    // O usuario deve preencher todos os campos
    private void actualizarTudo() {

        try {

            // Get date from Jcalendar-Chooser
            DateFormat dataF = new SimpleDateFormat("yyyy-MM-dd");
            String dataFabricacao = dataF.format(dataFabricacaoJCA.getDate());

            DateFormat dataE = new SimpleDateFormat("yyyy-MM-dd");
            String dataExpiracao = dataE.format(DataExpiracaoJCA.getDate());

            // ---------------------------FOREIGN KEY--------------------------- 
            // Get fornecedor ID to save on Produtos
            String nomeFornecedor = nomeFornecedorJC.getSelectedItem().toString();
            fornecedordb = new Fornecedordb();
            int idFornecedor = fornecedordb.getIdClente(nomeFornecedor);

            // Get fornecedor ID to save on Produtos
            classificacaoProdutodb = new ClassificacaoProdutodb();
            String classeProduto = classeProdutoJC.getSelectedItem().toString();
            int idClasseProduto = classificacaoProdutodb.getIdClassificacaoProduto(classeProduto);

            produtodb = new Produtodb();
            // pesquisar a nome de produto na lista
            String nomeProduto = nomeProdutoJT.getText().toUpperCase().trim();

            //------------------------------------------------------------------
            String quantidad = quantidadeJT.getText().trim();
            int quantidade = Integer.parseInt(quantidad);

            String acrescenta = acrescentarJT.getText().trim();

            int acrescentar = 0;
            int novaQuantidade = 0;
            if (!acrescentarVazioJT()) {

                acrescenta = acrescentarJT.getText().trim();
                acrescentar = Integer.parseInt(acrescenta);
                novaQuantidade = quantidade + acrescentar;

            } else {
                novaQuantidade = quantidade;
            }

            String prec = precoJT.getText().trim(); // preço em String 

            double preco = Double.parseDouble(prec); // Preço do produto: 1.000.00kz

            produto = new Produto();

            precoProduto = new Iva(preco);
            // IVA = 14% = 0.14 
            double iva = precoProduto.getProdutoIva(); // Valor do IVA = 140
            double valorPagarCliente = precoProduto.getNovoPrecoComIva();  // Valor a pagar pelo cliente: 1.140,00kz

            String codigoProduto = codigoProdutoJT.getText().trim();

            time = new CurrentDateAndTime();
            LocalDate dataActual = time.getCurrentDate();

            Double lucro = Double.parseDouble(lucroJT.getText());

            LocalDate data_fabricacao = time.toLocalDate(dataFabricacao);
            LocalDate data_expiracao = time.toLocalDate(dataExpiracao);

            produto = new Produto(nomeProduto, data_fabricacao, data_expiracao, dataActual,
                    quantidade, codigoProduto, preco, iva, valorPagarCliente, lucro);

//            
            // Definir a classificacao do produdo no cadastro
            produto.setIdClassificacao(idClasseProduto);

            // definir o fornecedor no cadastro
            produto.setFornecedor(new Fornecedor(idFornecedor));

            // Buscar o Usuario corrente fez o login na aplicacão;
            currentUserdb = new CurrentUserdb();
            int idCurrenteUser = currentUserdb.feachIdCurrentUser();
            produto.setCurrentUser(new CurrentUser(idCurrenteUser));

            // Salvar todos os item no banco de dados
            produtoUpdatedb = new ProdutoUpdatedb();
            produtoUpdatedb.actualizarTudo(produto);

            produtoTableView();

        } catch (NullPointerException | NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Possiveis erros:\n"
                    + "1 - Verifica os valores inseridos nos campos numericos\n"
                    + "Quantidade, Preço, Código ;\n"
                    + "2 - Tenha a certeza que os campos de Data de Fabricação\n"
                    + "Data de Expiração não estejam vazios.",
                    "ERRO AO SALVAR O PRODUTO", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }

// O Usuario de preencher tudo menos as datas, fornecedor e classificação
    private void actualizar() {

        try {

            produtodb = new Produtodb();
            // pesquisar a nome de produto na lista
            String nomeProduto = nomeProdutoJT.getText().toUpperCase().trim();

            //------------------------------------------------------------------
            String quantidad = quantidadeJT.getText().trim();
            int quantidade = Integer.parseInt(quantidad);

            String acrescenta = acrescentarJT.getText().trim();

            int acrescentar = 0;
            int novaQuantidade = 0;
            if (!acrescentarVazioJT()) {

                acrescenta = acrescentarJT.getText().trim();
                acrescentar = Integer.parseInt(acrescenta);
                novaQuantidade = quantidade + acrescentar;

            } else {
                novaQuantidade = quantidade;
            }

            String prec = precoJT.getText().trim(); // preço em String 

            double preco = Double.parseDouble(prec); // Preço do produto: 1.000.00kz

            produto = new Produto();

            precoProduto = new Iva(preco);
            // IVA = 14% = 0.14 
            double iva = precoProduto.getProdutoIva(); // Valor do IVA = 140
            double valorPagarCliente = precoProduto.getNovoPrecoComIva();  // Valor a pagar pelo cliente: 1.140,00kz

            String codigoProduto = codigoProdutoJT.getText().trim();

            time = new CurrentDateAndTime();
            LocalDate dataActual = time.getCurrentDate();

            double lucro = Double.parseDouble(lucroJT.getText().trim());

            produto = new Produto(nomeProduto, dataActual,
                    novaQuantidade, codigoProduto, preco, iva, valorPagarCliente, lucro);

            // Buscar o Usuario corrente fez o login na aplicacão;
            currentUserdb = new CurrentUserdb();
            int idCurrenteUser = currentUserdb.feachIdCurrentUser();
            produto.setCurrentUser(new CurrentUser(idCurrenteUser));

            // Salvar todos os item no banco de dados
            produtoUpdatedb = new ProdutoUpdatedb();
            produtoUpdatedb.actualizar(produto);

            produtoTableView();

        } catch (NullPointerException | NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Possiveis erros:\n"
                    + "1 - Verifica os valores inseridos nos campos numericos\n"
                    + "Quantidade, Preço, Código ;\n",
                    "ERRO AO SALVAR O PRODUTO", JOptionPane.ERROR_MESSAGE);
//            e.printStackTrace();
        }
    }

    private void imprimir(String opcao) {

        produtodb = null;

        Produtodb pdb = new Produtodb();
        pdb.updateSequenceNumber();
        if (opcao.endsWith("imprimir-tudo")) {
            new GerarRelatorio("todos_produtos.jasper").gerarRelatorio();
        } else {
            new GerarRelatorio("produtos_em_stock.jasper").gerarRelatorio();
        }

    }

    private void filtra() {
      
    
        filtrarNomeProdutoJT.setBackground(Color.green);

        DefaultTableModel modelo = (DefaultTableModel) produtotb.getModel();

        String elemento = filtrarNomeProdutoJT.getText().toUpperCase().trim();

        TableRowSorter<DefaultTableModel> tabela = new TableRowSorter<DefaultTableModel>(modelo);

        produtotb.setRowSorter(tabela);
        tabela.setRowFilter(javax.swing.RowFilter.regexFilter(elemento));


//To change body of generated methods, choose Tools | Templates.
    }

}
